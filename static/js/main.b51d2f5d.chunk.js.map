{"version":3,"sources":["redux/actions/actionTypes.js","api/serverApi.js","redux/actions/actions.js","components/fillingForm/cardInfo.js","components/fillingForm/userData.js","components/fillingForm/fillingForms.js","components/confirmation/confirmation.js","components/result/result.js","App.js","reportWebVitals.js","redux/reducer/reducer.js","index.js"],"names":["ADD_USER_INFO","MONTH_DATA","GET_SUCCESSFUL_DATA","URL_CONFIRMATION","URL_RESULT","url","data","a","axios","post","this","headers","console","log","getSuccessfulData","type","CardInformation","cardNumber","setCardNumber","expirationDate","setExpirationDate","securityCode","setSecurityCode","className","class","role","data-toggle","href","id","for","value","onChange","e","target","name","placeholder","required","title","UserData","lastName","setLastName","firstName","setFirstName","email","setEmail","streetAddress","setStreetAddress","FillingForm","useState","errorEmptyField","setErrorEmptyField","quantityOfMonths","setQuantityOfMonths","amountOfGigabytes","setAmountOfGigabytes","upfrontPayment","setUpfrontPayment","btn","setBtn","ifNo","display","opacity","position","fontSize","marginLeft","marginTop","background","bordeRadius","color","padding","ifYes","transition","errorStyles","useEffect","trim","arrayOfMonths","useSelector","state","defaultMonth","arrayOfGigabytes","defaultGigabytes","dispatch","useDispatch","handler","p1","p2","p3","p4","p5","p6","p7","setTimeout","urlResult","addUserInfo","monthData","checkedMonth","map","element","index","Fragment","defaultChecked","checkedGigabytes","style","event","to","onClick","disabled","Confirmation","totalPrice","setTotalPrice","checkedAgree","setCheckedAgree","user","userInfo","card","cardInfo","userChoice","choiceOfUser","calculateTotalPrice","dataObj","obj","ApiServer","addPost","Result","App","urlConfirmation","s","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","errorShow","done","err","arrUsers","store","createStore","action","newUser","cardUser","userRadioChoice","json","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b51d2f5d.chunk.js","sourcesContent":["export const ADD_USER_INFO = \"ADD_USER_INFO\";\r\nexport const MONTH_DATA = \"MONTH_DATA\";\r\nexport const GET_SUCCESSFUL_DATA = \"GET_SUCCESSFUL_DATA\";\r\nexport const URL_CONFIRMATION = \"URL_CONFIRMATION\";\r\nexport const URL_RESULT = \"URL_RESULT\";\r\n","import axios from \"axios\";\r\n\r\nclass postApiUserInfo {\r\n  url = \"https://httpbin.org\";\r\n  async addPost(data) {\r\n    try {\r\n      return await axios.post(\r\n        `${this.url}/post`,\r\n        { ...data },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    } catch {\r\n      console.log(\"Catch the error\");\r\n    }\r\n  }\r\n}\r\nexport default new postApiUserInfo();\r\n","import {\r\n  ADD_USER_INFO,\r\n  MONTH_DATA,\r\n  GET_SUCCESSFUL_DATA,\r\n  URL_CONFIRMATION,\r\n  URL_RESULT,\r\n} from \"./actionTypes.js\";\r\nimport ApiServer from \"./../../api/serverApi\";\r\n\r\nexport function setMonthData(monthData) {\r\n  return {\r\n    type: MONTH_DATA,\r\n    monthData,\r\n  };\r\n}\r\n\r\nfunction getSuccessfulData(data) {\r\n  return {\r\n    type: GET_SUCCESSFUL_DATA,\r\n    data,\r\n  };\r\n}\r\n\r\nexport function urlConfirmation(data) {\r\n  return {\r\n    type: URL_CONFIRMATION,\r\n    data,\r\n  };\r\n}\r\n\r\nexport function urlResult(data) {\r\n  return {\r\n    type: URL_RESULT,\r\n    data,\r\n  };\r\n}\r\n\r\nexport const thunkObjForData = (dataObj) => {\r\n  return async (dispatch) => {\r\n    const data = await ApiServer.addPost(dataObj);\r\n    dispatch(getSuccessfulData(data));\r\n  };\r\n};\r\n\r\nexport function addUserInfo(\r\n  lastName,\r\n  firstName,\r\n  email,\r\n  streetAddress,\r\n  cardNumber,\r\n  expirationDate,\r\n  securityCode,\r\n  quantityOfMonths,\r\n  amountOfGigabytes,\r\n  upfrontPayment\r\n) {\r\n  return {\r\n    type: ADD_USER_INFO,\r\n    lastName,\r\n    firstName,\r\n    email,\r\n    streetAddress,\r\n    cardNumber,\r\n    expirationDate,\r\n    securityCode,\r\n    quantityOfMonths,\r\n    amountOfGigabytes,\r\n    upfrontPayment,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./card.css\";\r\n\r\nconst CardInformation = ({\r\n  cardNumber,\r\n  setCardNumber,\r\n  expirationDate,\r\n  setExpirationDate,\r\n  securityCode,\r\n  setSecurityCode,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"maincontainer\">\r\n        <div class=\"container py-5\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-7 mx-auto\">\r\n              <div class=\"bg-white rounded-lg shadow-sm p-5\">\r\n                <ul\r\n                  role=\"tablist\"\r\n                  class=\"nav bg-light nav-pills rounded-pill nav-fill mb-3\"\r\n                >\r\n                  <li class=\"nav-item\">\r\n                    <a\r\n                      data-toggle=\"pill\"\r\n                      href=\"#nav-tab-card\"\r\n                      class=\"nav-link active rounded-pill\"\r\n                    >\r\n                      <i class=\"fa fa-credit-card\"></i>\r\n                      Credit Card\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a\r\n                      data-toggle=\"pill\"\r\n                      href=\"#nav-tab-paypal\"\r\n                      class=\"nav-link rounded-pill\"\r\n                    >\r\n                      <i class=\"fa fa-paypal\"></i>\r\n                      Paypal\r\n                    </a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a\r\n                      data-toggle=\"pill\"\r\n                      href=\"#nav-tab-bank\"\r\n                      class=\"nav-link rounded-pill\"\r\n                    >\r\n                      <i class=\"fa fa-university\"></i>\r\n                      Bank Transfer\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n\r\n                <div class=\"tab-content\">\r\n                  <div id=\"nav-tab-card\" class=\"tab-pane fade show active\">\r\n                    {/* <p class=\"alert alert-success\">\r\n                      Some text success or error\r\n                    </p> */}\r\n                    <form role=\"form\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"cardNumber\">Card information</label>\r\n                        <div class=\"input-group\">\r\n                          <input\r\n                            type=\"number\"\r\n                            value={cardNumber}\r\n                            onChange={(e) => {\r\n                              setCardNumber(e.target.value);\r\n                            }}\r\n                            name=\"cardNumber\"\r\n                            placeholder=\"Your card number\"\r\n                            class=\"form-control\"\r\n                            required\r\n                          />\r\n                          <div class=\"input-group-append\">\r\n                            <span class=\"input-group-text text-muted\">\r\n                              <i class=\"fa fa-cc-visa mx-1\"></i>\r\n                              <i class=\"fa fa-cc-amex mx-1\"></i>\r\n                              <i class=\"fa fa-cc-mastercard mx-1\"></i>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-8\">\r\n                          <div class=\"form-group\">\r\n                            <label>\r\n                              <span class=\"hidden-xs\">\r\n                                Card expiration date\r\n                              </span>\r\n                            </label>\r\n                            <div class=\"input-group\">\r\n                              <input\r\n                                type=\"number\"\r\n                                placeholder=\"MM YY\"\r\n                                value={expirationDate}\r\n                                onChange={(e) => {\r\n                                  setExpirationDate(e.target.value);\r\n                                }}\r\n                                class=\"form-control\"\r\n                                required\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                          <div class=\"form-group mb-4\">\r\n                            <label\r\n                              data-toggle=\"tooltip\"\r\n                              title=\"Three-digits code on the back of your card\"\r\n                            >\r\n                              CVV\r\n                              <i class=\"fa fa-question-circle\"></i>\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              value={securityCode}\r\n                              onChange={(e) => {\r\n                                setSecurityCode(e.target.value);\r\n                              }}\r\n                              class=\"form-control\"\r\n                              required\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n\r\n                  <div id=\"nav-tab-paypal\" class=\"tab-pane fade\">\r\n                    <p>Paypal is easiest way to pay online</p>\r\n                    <p>\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-primary rounded-pill\"\r\n                      >\r\n                        <i class=\"fa fa-paypal mr-2\"></i> Log into my Paypal\r\n                      </button>\r\n                    </p>\r\n                    <p class=\"text-muted\">\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua.\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div id=\"nav-tab-bank\" class=\"tab-pane fade\">\r\n                    <h6>Bank account details</h6>\r\n                    <dl>\r\n                      <dt>Bank</dt>\r\n                      <dd> THE WORLD BANK</dd>\r\n                    </dl>\r\n                    <dl>\r\n                      <dt>Account number</dt>\r\n                      <dd>7775877975</dd>\r\n                    </dl>\r\n                    <dl>\r\n                      <dt>IBAN</dt>\r\n                      <dd>CZ7775877975656</dd>\r\n                    </dl>\r\n                    <p class=\"text-muted\">\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    // <div>\r\n    //   <p>Credit Card data:</p>\r\n    //   <label>Card Number</label>\r\n    // <input\r\n    //   type=\"number\"\r\n    //   value={cardNumber}\r\n    //   onChange={(e) => {\r\n    //     setCardNumber(e.target.value);\r\n    //   }}\r\n    //   className=\"input\"\r\n    // />\r\n    //   <label>Card expiration date</label>\r\n    // <input\r\n    //   type=\"number\"\r\n    //   value={expirationDate}\r\n    //   onChange={(e) => {\r\n    //     setExpirationDate(e.target.value);\r\n    //   }}\r\n    //   className=\"input\"\r\n    // />\r\n    //   <label>Card security code</label>\r\n    // <input\r\n    //   type=\"number\"\r\n    //   value={securityCode}\r\n    //   onChange={(e) => {\r\n    //     setSecurityCode(e.target.value);\r\n    //   }}\r\n    //   className=\"input\"\r\n    // />\r\n    //   <p>Submit your data</p>\r\n    // </div>\r\n  );\r\n};\r\nexport default CardInformation;\r\n","import React from \"react\";\r\nimport \"./user.css\"\r\n\r\nconst UserData = ({\r\n  lastName,\r\n  setLastName,\r\n  firstName,\r\n  setFirstName,\r\n  email,\r\n  setEmail,\r\n  streetAddress,\r\n  setStreetAddress,\r\n}) => {\r\n  return (\r\n    <div className=\"userData\">\r\n      <p>Enter your personal data:</p>\r\n      <label>Last Name</label>\r\n      <input\r\n        type=\"text\"\r\n        value={lastName}\r\n        onChange={(e) => {\r\n          setLastName(e.target.value);\r\n        }}\r\n        className=\"input\"\r\n      />\r\n      <label>First Name</label>\r\n      <input\r\n        type=\"text\"\r\n        value={firstName}\r\n        onChange={(e) => {\r\n          setFirstName(e.target.value);\r\n        }}\r\n        className=\"input\"\r\n      />\r\n      <label> Email </label>\r\n      <input\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n        className=\"input\"\r\n      />\r\n      <label>Street Address</label>\r\n      <input\r\n        type=\"text\"\r\n        value={streetAddress}\r\n        onChange={(e) => {\r\n          setStreetAddress(e.target.value);\r\n        }}\r\n        className=\"input\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default UserData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  addUserInfo,\r\n  setMonthData,\r\n  urlConfirmation,\r\n  urlResult,\r\n} from \"../../redux/actions/actions\";\r\nimport CardInformation from \"./cardInfo\";\r\nimport UserData from \"./userData\";\r\nimport \"./filling.css\";\r\n\r\n\r\nconst FillingForm = () => {\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [streetAddress, setStreetAddress] = useState(\"\");\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [expirationDate, setExpirationDate] = useState(\"\");\r\n  const [securityCode, setSecurityCode] = useState(\"\");\r\n  const [errorEmptyField, setErrorEmptyField] = useState(false);\r\n  const [quantityOfMonths, setQuantityOfMonths] = useState(12);\r\n  const [amountOfGigabytes, setAmountOfGigabytes] = useState(5);\r\n  const [upfrontPayment, setUpfrontPayment] = useState(false);\r\n  const [btn, setBtn] = useState(false);\r\n\r\n  const [errorStyles] = useState({\r\n    ifNo: {\r\n      display: \"none\",\r\n      opacity: 0,\r\n      position: \"absolute\",\r\n      fontSize: \"1.3em\",\r\n      marginLeft: \"500px\",\r\n      marginTop: \"0\",\r\n      background: \"red\",\r\n      bordeRadius: \"10px\",\r\n      color: \"white\",\r\n      padding: \"4px\",\r\n    },\r\n    ifYes: {\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      marginLeft: \"500px\",\r\n      marginTop: \"150\",\r\n      fontSize: \"1.3em\",\r\n      transition: \"2s\",\r\n      background: \"red\",\r\n      bordeRadius: \"10px\",\r\n      color: \"white\",\r\n      padding: \"4px\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      lastName.trim() === \"\" ||\r\n      firstName.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      streetAddress.trim() === \"\" ||\r\n      cardNumber.trim() === \"\" ||\r\n      expirationDate.trim() === \"\" ||\r\n      securityCode.trim() === \"\"\r\n    ) {\r\n      setBtn(true);\r\n    } else {\r\n      setBtn();\r\n    }\r\n  }, [\r\n    lastName,\r\n    firstName,\r\n    email,\r\n    streetAddress,\r\n    cardNumber,\r\n    expirationDate,\r\n    securityCode,\r\n  ]);\r\n\r\n  const arrayOfMonths = useSelector((state) => state.arrayOfMonths);\r\n  const defaultMonth = useSelector((state) => state.defaultMonth);\r\n  const arrayOfGigabytes = useSelector((state) => state.arrayOfGigabytes);\r\n  const defaultGigabytes = useSelector((state) => state.defaultGigabytes);\r\n  const dispatch = useDispatch();\r\n\r\n  const handler = (p1, p2, p3, p4, p5, p6, p7) => {\r\n    if (\r\n      p1.trim() === \"\" ||\r\n      p2.trim() === \"\" ||\r\n      p3.trim() === \"\" ||\r\n      p4.trim() === \"\" ||\r\n      p5.trim() === \"\" ||\r\n      p6.trim() === \"\" ||\r\n      p7.trim() === \"\"\r\n    ) {\r\n      console.log(\"error\");\r\n      setErrorEmptyField(true);\r\n      setTimeout(() => {\r\n        setErrorEmptyField(false);\r\n      }, 3000);\r\n    } else {\r\n      dispatch(urlConfirmation(true));\r\n      dispatch(urlResult(true));\r\n      dispatch(\r\n        addUserInfo(\r\n          p1,\r\n          p2,\r\n          p3,\r\n          p4,\r\n          p5,\r\n          p6,\r\n          p7,\r\n          quantityOfMonths,\r\n          amountOfGigabytes,\r\n          upfrontPayment\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const sendDataToRedux = () => {\r\n    handler(\r\n      lastName,\r\n      firstName,\r\n      email,\r\n      streetAddress,\r\n      cardNumber,\r\n      expirationDate,\r\n      securityCode\r\n    );\r\n  };\r\n\r\n  const onChangeQuantityOfMonths = (event) => {\r\n    setQuantityOfMonths(event.target.value);\r\n  };\r\n\r\n  const onChangeAmountOfGigabytes = (event) => {\r\n    setAmountOfGigabytes(event.target.value);\r\n  };\r\n\r\n  const onChangeUpfrontPayment = (event) => {\r\n    setUpfrontPayment(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setMonthData(+quantityOfMonths));\r\n  }, [quantityOfMonths]);\r\n  useEffect(() => {\r\n    setQuantityOfMonths(defaultMonth);\r\n  }, []);\r\n\r\n  const checkedMonth = arrayOfMonths.map((element, index) => {\r\n    return (\r\n      <React.Fragment key={`${index}month`}>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"month\"\r\n          value={element}\r\n          defaultChecked={element === defaultMonth ? true : false}\r\n          className=\"radioBtn\"\r\n        />\r\n        <label>{element}</label>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  const checkedGigabytes = arrayOfGigabytes.map((element, index) => {\r\n    return (\r\n      <React.Fragment key={`${index}amount`}>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"amount\"\r\n          value={element}\r\n          defaultChecked={element === defaultGigabytes ? true : false}\r\n          className=\"radioBtn\"\r\n        />\r\n        <label>{element}</label>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"part-for-input\">\r\n      <p className=\"title colortext\">Select your plan:</p>\r\n\r\n      <p style={errorEmptyField ? errorStyles.ifYes : errorStyles.ifNo}>\r\n        {\" \"}\r\n        You should fill all required fields\r\n      </p>\r\n      <div className=\"radio-button\">\r\n        <p>Duration: </p>\r\n        <div className=\"radioButton\" onChange={onChangeQuantityOfMonths}>\r\n          {checkedMonth}{\" \"}\r\n        </div>\r\n\r\n        <div>\r\n          {\" \"}\r\n          <p> Amount of gigabytes in a cloud: </p>\r\n        </div>\r\n        <div className=\"radioButton\" onChange={onChangeAmountOfGigabytes}>\r\n          {checkedGigabytes}{\" \"}\r\n        </div>\r\n\r\n        <p> Upfront payment:</p>\r\n        <div className=\"radioButton\" onChange={onChangeUpfrontPayment}>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"yes\"\r\n            name=\"upfront\"\r\n            value={true}\r\n            className=\"radioBtn\"\r\n          ></input>\r\n          <label>yes</label>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"no\"\r\n            name=\"upfront\"\r\n            value={false}\r\n            defaultChecked\r\n            className=\"radioBtn\"\r\n          ></input>\r\n          <label>no</label>\r\n        </div>\r\n      </div>\r\n      <UserData\r\n        lastName={lastName}\r\n        setLastName={setLastName}\r\n        firstName={firstName}\r\n        setFirstName={setFirstName}\r\n        email={email}\r\n        setEmail={setEmail}\r\n        streetAddress={streetAddress}\r\n        setStreetAddress={setStreetAddress}\r\n      />\r\n      <CardInformation\r\n        cardNumber={cardNumber}\r\n        setCardNumber={setCardNumber}\r\n        expirationDate={expirationDate}\r\n        setExpirationDate={setExpirationDate}\r\n        securityCode={securityCode}\r\n        setSecurityCode={setSecurityCode}\r\n      />\r\n      <Link to={btn ? \"/\" : \"/сonfirmation\"} onClick={sendDataToRedux}>\r\n        <div className=\"submit-button\">\r\n          <button className=\"btn\" disabled={btn ? true : \"\"}>\r\n            {\" \"}\r\n            Next\r\n          </button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default FillingForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { thunkObjForData } from \"./../../redux/actions/actions\";\r\nimport \"./confirmation.css\";\r\n\r\nconst Confirmation = () => {\r\n  const dispatch = useDispatch();\r\n  const [totalPrice, setTotalPrice] = useState(\"\");\r\n  const [checkedAgree, setCheckedAgree] = useState(false);\r\n  const user = useSelector((state) => state.userInfo);\r\n  const card = useSelector((state) => state.cardInfo);\r\n  const userChoice = useSelector((state) => state.choiceOfUser);\r\n  const calculateTotalPrice = () => {\r\n    const pricePerOneGB = 2;\r\n    return (\r\n      +userChoice.amountOfGigabytes *\r\n      +userChoice.quantityOfMonths *\r\n      +pricePerOneGB\r\n    );\r\n  };\r\n\r\n  const willSendDataToEndPoint = () => {\r\n    const obj = {\r\n      lastName: user.lastName,\r\n      firstName: user.firstName,\r\n      email: user.email,\r\n      streetAddress: user.streetAddress,\r\n      cardNumber: card.cardNumber,\r\n      expirationDate: card.expirationDate,\r\n      securityCode: card.securityCode,\r\n      totalPrice,\r\n      userChoice,\r\n    };\r\n    dispatch(thunkObjForData(obj));\r\n    // console.log(\"sendData\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userChoice.upfrontPayment === \"true\") {\r\n      setTotalPrice(calculateTotalPrice() * 0.9);\r\n    } else {\r\n      setTotalPrice(calculateTotalPrice);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"titleN\">\r\n        Check the entered information and make sure that everything is correct.\r\n      </p>\r\n      <p>\r\n        Your full name is <span className=\"colortext\">{user.firstName} {user.lastName}</span>.\r\n      </p>\r\n      <p>\r\n        {\" \"}\r\n        Email address:<span className=\"colortext\">{user.email}</span>. Street address:<span className=\"colortext\">{user.streetAddress}</span>.\r\n      </p>\r\n      <p>\r\n        You have ordered <span className=\"colortext\">{userChoice.amountOfGigabytes} gigabytes</span>  in the cloud\r\n        for <span className=\"colortext\">{userChoice.quantityOfMonths} months</span>.\r\n      </p>\r\n      <p>\r\n        Your Card Number: <span className=\"colortext\">{card.cardNumber}</span>. Card expiration date:{\" \"}\r\n        <span className=\"colortext\">{card.expirationDate}</span>. Card security code:<span className=\"colortext\">{card.securityCode}</span>.\r\n      </p>\r\n\r\n      <p>Your order costs: <span className=\"colortext2\">{totalPrice}$</span>.</p>\r\n\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"checkbox\"\r\n        defaultChecked={checkedAgree}\r\n        onChange={() => setCheckedAgree(!checkedAgree)}\r\n        \r\n      />\r\n      <label className=\"colortext3\">\r\n        {\" \"}\r\n        I have read and agree to the Terms and Conditions and Privacy Policy\r\n      </label>\r\n       <div className=\"buttonBlock\">\r\n      <Link to=\"/\">\r\n        <button className=\"transBtn\">Back</button>\r\n      </Link>\r\n      <Link to={checkedAgree ? \"/result\" : \"/сonfirmation\"}>\r\n        <button\r\n          onClick={willSendDataToEndPoint}\r\n          className=\"transBtn1\"\r\n          disabled={checkedAgree ? \"\" : true}\r\n        >\r\n          Confirm\r\n        </button>\r\n      </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Confirmation;\r\n","import \"./result.css\";\r\n\r\n\r\nconst Result = () => {\r\n \r\n  return (\r\n    <div>\r\n      <p className=\"result\">Thank you! Your order has been successfully placed {\":)\"}</p>\r\n    \r\n    </div>\r\n  );\r\n    \r\n};\r\nexport default Result;\r\n","import \"./App.css\";\nimport FillingForm from \"./components/fillingForm/fillingForms\";\nimport Confirmation from \"./components/confirmation/confirmation\";\nimport Result from \"./components/result/result\";\nimport { useSelector } from \"react-redux\";\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  const urlConfirmation = useSelector((s) => s.urlConfirmation);\n  console.log(urlConfirmation);\n  return (\n    <div className=\"App\">\n      <div className=\"center\">\n        <Router basename=\"/test-task/\">\n          <Route exact path=\"/\" component={FillingForm} />\n          <Route exact path=\"/сonfirmation\">\n            {urlConfirmation ? <Confirmation /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/result\" component={Result} />\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  ADD_USER_INFO,\r\n  MONTH_DATA,\r\n  GET_SUCCESSFUL_DATA,\r\n  URL_CONFIRMATION,\r\n  URL_RESULT,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  urlConfirmation: false,\r\n  urlResult: false,\r\n  defaultMonth: 12,\r\n  arrayOfMonths: [3, 6, 12],\r\n  defaultGigabytes: 5,\r\n  arrayOfGigabytes: [3, 5, 10, 20, 30, 50],\r\n  errorShow: null,\r\n  done: true,\r\n  cardInfo: null,\r\n  userInfo: null,\r\n  err: null,\r\n  choiceOfUser: null,\r\n  arrUsers: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_USER_INFO:\r\n      const newUser = {\r\n        lastName: action.lastName,\r\n        firstName: action.firstName,\r\n        email: action.email,\r\n        streetAddress: action.streetAddress,\r\n      };\r\n      const cardUser = {\r\n        cardNumber: action.cardNumber,\r\n        expirationDate: action.expirationDate,\r\n        securityCode: action.securityCode,\r\n      };\r\n      const userRadioChoice = {\r\n        quantityOfMonths: action.quantityOfMonths,\r\n        amountOfGigabytes: action.amountOfGigabytes,\r\n        upfrontPayment: action.upfrontPayment,\r\n      };\r\n      console.log(newUser, cardUser, userRadioChoice);\r\n      return {\r\n        ...state,\r\n        cardInfo: cardUser,\r\n        userInfo: newUser,\r\n        choiceOfUser: userRadioChoice,\r\n      };\r\n    case MONTH_DATA: {\r\n      return {\r\n        ...state,\r\n        defaultMonth: action.monthData,\r\n      };\r\n    }\r\n    case GET_SUCCESSFUL_DATA: {\r\n      console.log(action.data.data.json);\r\n      return {\r\n        ...state,\r\n        arrUsers: [...state.arrUsers, action.data.data.json],\r\n      };\r\n    }\r\n    case URL_CONFIRMATION: {\r\n      console.log(action.data);\r\n      return {\r\n        ...state,\r\n        urlConfirmation: action.data,\r\n      };\r\n    }\r\n    case URL_RESULT: {\r\n      return {\r\n        ...state,\r\n        urlConfirmation: action.data,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./redux/reducer/reducer\";\nimport thunk from \"redux-thunk\";\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}